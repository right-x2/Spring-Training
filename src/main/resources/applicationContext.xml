<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
		


	<context:component-scan base-package="com.springbook.biz"></context:component-scan>
	
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<!-- DataSource 설정 -->
	<context:property-placeholder location="./config/database.properties"/>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<!-- 
	<bean id="beforeLogAdvice" class="com.springbook.biz.common.BeforeLogAdvice"></bean>
	<bean id="afterReturningLogAdvice" class="com.springbook.biz.common.AfterReturningLogAdvice"></bean>
	<bean id="afterThrowingAdvice" class="com.springbook.biz.common.AfterThrowingAdvice"></bean>
	
	<aop:config>
		<aop:pointcut id="allPointcut" expression="execution(* com.springbook.biz..*Impl.*(..))"/>
		<aop:pointcut id="getPointcut" expression="execution(* com.springbook.biz..*Impl.get*(..))"/>
		
		<aop:aspect ref="afterReturningLogAdvice">
			<aop:after-returning pointcut-ref="getPointcut" method="afterLog" returning="returnObj"/>
		</aop:aspect>
		 
		 <aop:aspect ref="afterThrowingAdvice" >
		 	<aop:after-throwing pointcut-ref="allPointcut" method="exceptionLog" throwing="exceptionObj"/>
		 </aop:aspect>
		
	</aop:config>
	 -->
	<!--
	<bean id="userService" class="com.springbook.biz.user.impl.UserServiceImpl">
		<property name="userDAO" ref="userDAO"></property>
	</bean>
	<bean id="userDAO" class="com.springbook.biz.user.impl.UserDAO"></bean>
	-->
	
	
<!-- 		
		<context:component-scan base-package="com.springbook.biz"></context:component-scan>
		<bean class="com.springbook.biz.SonySpeaker"></bean>
		
 -->
<!--  
	<bean id="collectionBean" class="com.springbook.biz.CollectionBean">
		<property name="addressList">
			<set value-type="java.lang.String">
				<value>서울시 강남구 역삼동</value>
				<value>서울시 성동구 행당동</value>
				<value>서울시 성동구 성수동</value>
			</set>
		</property>
	</bean>
	
	<bean id="tv" class="com.springbook.biz.SamsungTV"  p:speaker-ref="apple" p:price="270000"></bean>
	
	<bean id="sony" class="com.springbook.biz.SonySpeaker" ></bean>
	
	<bean id="apple" class="com.springbook.biz.AppleSpeaker" ></bean>
-->
</beans>
